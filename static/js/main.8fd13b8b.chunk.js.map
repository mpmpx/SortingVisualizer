{"version":3,"sources":["app/control-pane.js","app/board.js","algorithm/util.js","algorithm/merge-sort.js","algorithm/quick-sort.js","algorithm/heap-sort.js","app/app.js","algorithm/insertion-sort.js","algorithm/selection-sort.js","algorithm/bubble-sort.js","index.js"],"names":["ControlPane","algorithm","this","props","visualizeInfo","className","onClick","onReset","onArrayChange","href","onMouseDown","onAlgorithmChange","bind","style","display","onVisiualizationStart","type","max","sizeRange","min","value","sizeValue","onChange","onSizeChange","speedRange","speedValue","onSpeedChange","onReverse","React","Component","Board","array","history","status","indexList","index","map","height","maxNum","top","width","Math","floor","window","innerWidth","length","includes","onRestore","swap","first_index","second_index","tmp","push","slice","mergeSort","arr","mergeSortHelper","l","r","mid","m","left","right","i","j","k","merge","quickSort","quickSortHelper","pivot","partition","heapify","size","root","largest","App","Array","from","random","state","count","arraySize","speed","origin_array","handleReset","handleRestore","handleAlgorithmChange","handleVisiualization","handleRandomArray","handleSizeChange","handleSpeedChange","handleReverse","setState","new_history","insertionSort","j_min","selectionSort","bubbleSort","heapSort","Error","concat","id","setInterval","document","getElementsByTagName","clearInterval","event","target","reverse","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.8fd13b8b.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass ControlPane extends React.Component {\r\n\trender() {\r\n\t\tconst algorithm = this.props.algorithm;\r\n\t\tconst visualizeInfo = algorithm === '' ?\r\n\t\t\t\"Select a sorting algorithm!\" :\r\n\t\t\t\"Visualize \" + algorithm + \"!\";\r\n\r\n\t\treturn (\r\n\t\t\t<nav className='nav-main'>\r\n        <div className='nav-header' onClick={this.props.onReset}>\r\n          SortingVisualizer\r\n        </div>\r\n\t\t\t\t<div className='nav-item'>\r\n\t\t\t\t\t<button className='nav-button' onClick={this.props.onArrayChange}>\r\n\t\t\t\t\t\tRandom array\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='dropdown nav-item'>\r\n\t\t\t\t  <button className='dropdown-button nav-button' >Algorithm &#9660;</button>\r\n\t\t\t\t  <div className='dropdown-menu'>\r\n\t\t\t\t\t\t<a href=\"#\" className='dropdown-item' onMouseDown={this.props.onAlgorithmChange.bind(this, \"insertion sort\")}>Insertion sort</a>\r\n\t\t\t\t\t\t<a href=\"#\" className='dropdown-item' onMouseDown={this.props.onAlgorithmChange.bind(this, \"selection sort\")}>Selection sort</a>\r\n\t\t\t\t\t\t<a href=\"#\" className='dropdown-item' onMouseDown={this.props.onAlgorithmChange.bind(this, \"bubble sort\")}>Bubble sort</a>\r\n\t\t\t\t    <a href=\"#\" className='dropdown-item' onMouseDown={this.props.onAlgorithmChange.bind(this, \"merge sort\")}>Merge sort</a>\r\n\t\t\t\t\t\t<a href=\"#\" className='dropdown-item' onMouseDown={this.props.onAlgorithmChange.bind(this, \"quick sort\")}>Quick sort</a>\r\n\t\t\t\t\t\t<a href=\"#\" className='dropdown-item' onMouseDown={this.props.onAlgorithmChange.bind(this, \"heap sort\")}>Heap sort</a>\r\n\t\t\t\t    <a href=\"#\" style={{display: 'none'}} className='dropdown-item' onMouseDown={this.props.onAlgorithmChange.bind(this, \"quick sort\")}>Quick sort</a>\r\n\t\t\t\t  </div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"nav-item\">\r\n\t\t\t\t\t<button className=\"nav-button visualize-button\" onClick={this.props.onVisiualizationStart}>{visualizeInfo}</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='dropdown nav-item'>\r\n\t\t\t\t\t<button className='dropdown-button nav-button'>Array size</button>\r\n\t\t\t\t\t<div className='slidercontainer'>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\tclassName='slider-item'\r\n\t\t\t\t\t\t\ttype=\"range\"\r\n\t\t\t\t\t\t\tmax={this.props.sizeRange.max}\r\n\t\t\t\t\t\t\tmin={this.props.sizeRange.min}\r\n\t\t\t\t\t\t\tvalue={this.props.sizeValue}\r\n\t\t\t\t\t\t\tonChange={this.props.onSizeChange}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<div className='slider-item'>{this.props.sizeValue}</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='dropdown nav-item'>\r\n\t\t\t\t\t<button className='dropdown-button nav-button'>Speed</button>\r\n\t\t\t\t\t<div className='slidercontainer'>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\tclassName='slider-item'\r\n\t\t\t\t\t\t\ttype=\"range\"\r\n\t\t\t\t\t\t\tmax={this.props.speedRange.max}\r\n\t\t\t\t\t\t\tmin={this.props.speedRange.min}\r\n\t\t\t\t\t\t\tvalue={this.props.speedValue}\r\n\t\t\t\t\t\t\tonChange={this.props.onSpeedChange}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<div className='slider-item'>{this.props.speedValue}</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='nav-item'>\r\n\t\t\t\t\t<button className='nav-button' onClick={this.props.onReverse}>\r\n\t\t\t\t\t\tReverse\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</nav>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default ControlPane;\r\n","import React from 'react';\r\n\r\nclass Board extends React.Component {\r\n\trender() {\r\n\t\tconst array = this.props.history.array;\r\n\t\tconst status = this.props.history.status;\r\n\t\tconst indexList = this.props.history.index;\r\n\r\n\t\treturn (\r\n\t\t\t<div className='main'>\r\n\t\t\t\t<div className='board'>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tarray.map ( (value, index) => {\r\n\t\t\t\t\t\t\tconst height = value / this.props.maxNum * 100;\r\n\t\t\t\t\t\t\tconst width = Math.floor(window.innerWidth * 0.5 / array.length);\r\n\t\t\t\t\t\t\tconst style = {\r\n\t\t\t\t\t\t\t\theight: height + \"%\",\r\n\t\t\t\t\t\t\t\ttop: 100 - height + \"%\",\r\n\t\t\t\t\t\t\t\twidth: width + \"px\",\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tconst className = (() => {\r\n\t\t\t\t\t\t\t\tif (indexList == null) {\r\n\t\t\t\t\t\t\t\t\treturn \"bar\";\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif (indexList.includes(index)) {\r\n\t\t\t\t\t\t\t\t\tif (status === \"swap\") {\r\n\t\t\t\t\t\t\t\t\t\treturn \"bar-swap\";\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\telse if (status === \"compare\") {\r\n\t\t\t\t\t\t\t\t\t\treturn \"bar-compare\";\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\treturn \"bar\";\r\n\t\t\t\t\t\t\t})();\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<div className={className} style={style}></div>\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='reset'>\r\n\t\t\t\t\t<button className='reset-button' onClick={this.props.onRestore}>Restore</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Board;\r\n","export function swap(array, first_index, second_index, history) {\r\n  const tmp = array[first_index];\r\n  array[first_index] = array[second_index];\r\n  array[second_index] = tmp;\r\n  history.push({\r\n    array: array.slice(),\r\n    status: 'swap',\r\n    index: [first_index, second_index]\r\n  })\r\n}\r\n","export function mergeSort(array) {\r\n\tconst arr = array.slice();\r\n\tlet history = [];\r\n\tmergeSortHelper(arr, 0, arr.length - 1, history);\r\n\thistory.push({array: arr.slice(), status: 'none', index: null});\r\n\treturn history;\r\n}\r\n\r\nfunction mergeSortHelper(array, l, r, history) {\r\n\tif (l < r) {\r\n\t\tconst mid = Math.floor((l + r) / 2);\r\n\t\tmergeSortHelper(array, l, mid, history);\r\n\t\tmergeSortHelper(array, mid + 1, r, history);\r\n\t\tmerge(array, l, mid, r, history);\r\n\t}\r\n}\r\n\r\nfunction merge(array, l, m, r, history) {\r\n\tconst left = array.slice(l, m + 1);\r\n\tconst right = array.slice(m + 1, r + 1);\r\n\tlet i = 0;\r\n\tlet j = 0;\r\n\tlet k = 0;\r\n\twhile (i < left.length && j < right.length) {\r\n\t\thistory.push({array: array.slice(), status: 'compare', index: [l + i , m + 1 + j]});\r\n\t\tif (left[i] < right[j]) {\r\n\t\t\tarray[l + k] = left[i];\r\n\t\t\thistory.push({array: array.slice(), status: 'swap', index: [l + k]});\r\n\t\t\ti++\r\n\t\t}\r\n\t\telse {\r\n\t\t\tarray[l + k] = right[j];\r\n\t\t\thistory.push({array: array.slice(), status: 'swap', index: [l + k]});\r\n\t\t\tj++;\r\n\t\t}\r\n\t\tk++\r\n\t}\r\n\r\n\twhile (i < left.length) {\r\n\t\tarray[l + k] = left[i];\r\n\t\thistory.push({array: array.slice(), status: 'swap', index: [l + k]});\r\n\t\tk++;\r\n\t\ti++;\r\n\t}\r\n\r\n\twhile (j < right.length) {\r\n\t\tarray[l + k] = right[j];\r\n\t\thistory.push({array: array.slice(), status: 'swap', index: [l + k]});\r\n\t\tj++;\r\n\t\tk++\r\n\t}\r\n}\r\n","import {swap} from './util.js'\r\n\r\nexport function quickSort(array) {\r\n  const arr = array.slice();\r\n  let history = [];\r\n  quickSortHelper(arr, 0, arr.length - 1, history);\r\n  history.push({array: arr.slice(), status: 'none', index: null});\r\n  return history;\r\n}\r\n\r\nfunction quickSortHelper(array, l, r, history) {\r\n  if (l < r) {\r\n    let pivot = partition(array, l, r, history);\r\n    quickSortHelper(array, l, pivot - 1, history);\r\n    quickSortHelper(array, pivot + 1, r, history);\r\n  }\r\n}\r\n\r\nfunction partition(array, l, r, history) {\r\n  let pivot = array[r];\r\n  let i = l;\r\n  for (let j = l; j < r; j++) {\r\n    history.push({array: array.slice(), status: 'compare', index: [j, r]});\r\n    if (array[j] < pivot) {\r\n      swap(array, i, j, history);\r\n      i++;\r\n    }\r\n  }\r\n  swap(array, i, r, history);\r\n  return i;\r\n}\r\n","import {swap} from './util.js'\r\n\r\nexport function heapSort(array) {\r\n  const arr = array.slice();\r\n  let history = [];\r\n\r\n  for (let i = Math.floor(arr.length / 2) - 1; i >= 0; i--) {\r\n    heapify(arr, arr.length, i, history);\r\n  }\r\n\r\n  for (let i = arr.length - 1; i > 0; i--) {\r\n    swap(arr, 0, i, history);\r\n    heapify(arr, i, 0, history);\r\n  }\r\n\r\n  history.push({array: arr.slice(), status: 'none', index: null});\r\n  return history;\r\n}\r\n\r\nfunction heapify(array, size, root, history) {\r\n  let largest = root;\r\n  let l = 2 * root + 1;\r\n  let r = 2 * root + 2;\r\n\r\n  if (l < size && array[l] > array[largest]) {\r\n    history.push({array: array.slice(), status: 'compare', index: [l, largest]});\r\n    largest = l;\r\n  }\r\n\r\n  if (r < size && array[r] > array[largest]) {\r\n    history.push({array: array.slice(), status: 'compare', index: [r, largest]});\r\n    largest = r;\r\n  }\r\n\r\n  if (largest != root) {\r\n    swap(array, root, largest, history);\r\n    heapify(array, size, largest, history);\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ControlPane from './control-pane';\r\nimport Board from './board';\r\nimport {insertionSort}  from '../algorithm/insertion-sort.js'\r\nimport {selectionSort} from '../algorithm/selection-sort.js'\r\nimport {bubbleSort} from '../algorithm/bubble-sort.js'\r\nimport {mergeSort} from '../algorithm/merge-sort.js'\r\nimport {quickSort} from '../algorithm/quick-sort.js'\r\nimport {heapSort} from '../algorithm/heap-sort.js'\r\n\r\nclass App extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.maxNum = 200;\r\n\t\tthis.sizeRange = {\r\n\t\t\tmin: 10,\r\n\t\t\tmax: 200,\r\n\t\t};\r\n\t\tthis.speedRange ={\r\n\t\t\tmin: 1,\r\n\t\t\tmax: 10,\r\n\t\t};\r\n\r\n\t\tconst array = Array.from({length: 10}, () => Math.floor(Math.random() * this.maxNum));\r\n\t\tthis.state = {\r\n\t\t\tcount: 0,\r\n\t\t\thistory: [{array: array, status: 'none', index: []}],\r\n\t\t\talgorithm: '',\r\n\t\t\tarraySize: 10,\r\n\t\t\tspeed: 5,\r\n\t\t\tarray: array,\r\n\t\t\torigin_array: array,\r\n\t\t};\r\n    this.handleReset = this.handleReset.bind(this);\r\n\t\tthis.handleRestore = this.handleRestore.bind(this);\r\n\t\tthis.handleAlgorithmChange = this.handleAlgorithmChange.bind(this);\r\n\t\tthis.handleVisiualization = this.handleVisiualization.bind(this);\r\n\t\tthis.handleRandomArray = this.handleRandomArray.bind(this);\r\n\t\tthis.handleSizeChange = this.handleSizeChange.bind(this);\r\n\t\tthis.handleSpeedChange = this.handleSpeedChange.bind(this);\r\n\t\tthis.handleReverse = this.handleReverse.bind(this);\r\n\t}\r\n\r\n  handleReset() {\r\n    const array = Array.from({length: 10}, () => Math.floor(Math.random() * this.maxNum));\r\n    this.setState({\r\n      count: 0,\r\n\t\t\thistory: [{array: array, status: 'none', index: null}],\r\n\t\t\talgorithm: '',\r\n\t\t\tarraySize: 10,\r\n\t\t\tspeed: 5,\r\n\t\t\tarray: array,\r\n\t\t\torigin_array: array,\r\n    })\r\n  }\r\n\r\n\thandleRestore() {\r\n\t\tthis.setState({\r\n\t\t\tcount: 0,\r\n\t\t\thistory: [{array: this.state.origin_array, status: 'none', index: null}],\r\n\t\t\tarray: this.state.origin_array,\r\n\t\t})\r\n\t}\r\n\r\n\thandleAlgorithmChange(algorithm) {\r\n\t\tthis.setState({\r\n      count: 0,\r\n\t\t\thistory: [{array: this.state.array, status: 'none', index: null}],\r\n\t\t\talgorithm: algorithm,\r\n\t\t})\r\n\t}\r\n\r\n\thandleVisiualization() {\r\n\t\tif (this.state.algorithm === '') {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst array = this.state.array;\r\n    const new_history = (() => {\r\n      switch (this.state.algorithm) {\r\n\t\t\t\tcase \"insertion sort\":\r\n\t\t\t\t\treturn insertionSort(array);\r\n\t\t\t\tcase \"selection sort\":\r\n\t\t\t\t\treturn selectionSort(array);\r\n\t\t\t\tcase \"bubble sort\":\r\n\t\t\t\t\treturn bubbleSort(array);\r\n        case \"merge sort\":\r\n          return mergeSort(array);\r\n        case \"quick sort\":\r\n          return quickSort(array);\r\n\t\t\t\tcase \"heap sort\":\r\n\t\t\t\t\treturn heapSort(array);\r\n\t\t\t\tdefault:\r\n          throw new Error(\"Algorithm not found: \" + this.state.algorithm);\r\n      }\r\n    })();\r\n\r\n    const history = this.state.history.concat(new_history);\r\n\t\tconst id = setInterval(() => {\r\n\t\t\tconst count = this.state.count;\r\n      document.getElementsByTagName('html')[0].style['pointer-events'] = 'none';\r\n\t\t\tif (count >= history.length - 2) {\r\n\t\t\t\tclearInterval(id);\r\n        document.getElementsByTagName('html')[0].style['pointer-events'] = 'auto';\r\n\t\t\t}\r\n\t\t\tthis.setState({\r\n\t\t\t\tcount: count + 1,\r\n\t\t\t\thistory: history,\r\n\t\t\t\tarray: this.state.history[this.state.count].array,\r\n\t\t\t});\r\n\t\t}, 10 / this.state.speed * 10);\r\n\t}\r\n\r\n\thandleRandomArray() {\r\n\t\tconst array = Array.from({length: this.state.arraySize}, () => Math.floor(Math.random() * this.maxNum) + 1);\r\n\t\tthis.setState({\r\n\t\t\tcount: 0,\r\n\t\t\tarray: array,\r\n\t\t\torigin_array: array,\r\n\t\t\thistory: [{array: array, status: 'none', index: []}],\r\n\t\t});\r\n\t}\r\n\r\n\thandleSizeChange(event) {\r\n\t\tconst size = event.target.value;\r\n\t\tconst array = Array.from({length: size}, () => Math.floor(Math.random() * this.maxNum) + 1);\r\n\t\tthis.setState({\r\n      count: 0,\r\n\t\t\thistory: [{array: array, status: 'none', index: []}],\r\n\t\t\tarray: array,\r\n\t\t\tarraySize: size,\r\n\t\t\torigin_array: array,\r\n\t\t});\r\n\t}\r\n\r\n\thandleSpeedChange(event) {\r\n\t\tthis.setState({\r\n\t\t\tspeed: event.target.value,\r\n\t\t})\r\n\t}\r\n\r\n\thandleReverse() {\r\n\t\tconst array = this.state.array.reverse();\r\n\t\tthis.setState({\r\n\t\t\tcount: 0,\r\n\t\t\tarray: array,\r\n\t\t\thistory: [{array: array, status: 'none', index: []}],\r\n\t\t\torigin_array: array,\r\n\t\t})\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<ControlPane\r\n          onReset={this.handleReset}\r\n\t\t\t\t\tonAlgorithmChange={this.handleAlgorithmChange}\r\n\t\t\t\t\tonVisiualizationStart={this.handleVisiualization}\r\n\t\t\t\t\tonArrayChange={this.handleRandomArray}\r\n\t\t\t\t\tonSizeChange={this.handleSizeChange}\r\n\t\t\t\t\tonSpeedChange={this.handleSpeedChange}\r\n\t\t\t\t\tonReverse={this.handleReverse}\r\n\t\t\t\t\talgorithm={this.state.algorithm}\r\n\t\t\t\t\tsizeValue={this.state.arraySize}\r\n\t\t\t\t\tsizeRange={this.sizeRange}\r\n\t\t\t\t\tspeedValue={this.state.speed}\r\n\t\t\t\t\tspeedRange={this.speedRange}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<Board\r\n\t\t\t\t\thistory={this.state.history[this.state.count]}\r\n\t\t\t\t\tmaxNum={this.maxNum}\r\n\t\t\t\t\tonRestore={this.handleRestore}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default App;\r\n","import {swap} from './util.js';\r\n\r\nexport function insertionSort(array) {\r\n  const arr = array.slice();\r\n  let history = [];\r\n  let i = 1;\r\n  while (i < arr.length) {\r\n    let j = i;\r\n    history.push({array: arr.slice(), status: 'compare', index: [j, j - 1]});\r\n    while (j > 0 && arr[j - 1] > arr[j]) {\r\n      swap(arr, j, j - 1, history);\r\n      j--;\r\n    }\r\n    i++\r\n  }\r\n  history.push({array: arr.slice(), status: 'none', index: null});\r\n  return history;\r\n}\r\n","import {swap} from './util.js';\r\n\r\nexport function selectionSort(array) {\r\n  const arr = array.slice();\r\n  let history = [];\r\n\r\n  for (let i = 0; i < arr.length - 1; i++) {\r\n    let j_min = i;\r\n    for (let j = i + 1; j < arr.length; j++) {\r\n      history.push({array: arr.slice(), status: 'compare', index: [j, j_min]});\r\n      if (arr[j] < arr[j_min]) {\r\n        j_min = j;\r\n      }\r\n    }\r\n    if (j_min != i) {\r\n      swap(arr, i, j_min, history);\r\n    }\r\n  }\r\n\r\n  history.push({array: arr.slice(), status: 'none', index: null});\r\n  return history;\r\n}\r\n","import {swap} from './util.js'\r\n\r\nexport function bubbleSort(array) {\r\n  const arr = array.slice();\r\n  let history = [];\r\n  for (let i = 0; i < arr.length - 1; i++) {\r\n    for (let j = 0; j < arr.length - i - 1; j++) {\r\n      history.push({array: arr.slice(), status: 'compare', index: [j , j + 1]});\r\n      if (arr[j] > arr[j + 1]) {\r\n        swap(arr, j, j + 1, history);\r\n      }\r\n    }\r\n  }\r\n  history.push({array: arr.slice(), status: 'none', index: null});\r\n  return history;\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './app/app'\r\nimport './style/style.css';\r\n\r\nReactDOM.render(\r\n\t<App />,\r\n\tdocument.getElementById('root')\r\n);\r\n"],"sourceRoot":""}